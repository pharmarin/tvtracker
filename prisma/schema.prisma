// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum User {
    Marin
    Marion
}

model MediaGenre {
    id     String  @id @default(cuid())
    tmdbId Int     @unique
    name   String?

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    shows Show[]
    movie Movie[]
}

model Season {
    id       String    @id @default(cuid())
    tmdbId   Int       @unique
    name     String?
    number   Int?
    poster   String?
    episodes Episode[]

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    show   Show?   @relation(fields: [showId], references: [id], onDelete: Cascade)
    showId String?
}

model Episode {
    id       String    @id @default(cuid())
    tmdbId   Int       @unique
    number   Int?
    name     String?
    overview String?
    airDate  DateTime?

    checked Boolean @default(false)

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    season   Season? @relation(fields: [seasonId], references: [id], onDelete: Cascade)
    seasonId String?
}

model Show {
    id               String       @id @default(cuid())
    tmdbId           Int          @unique
    name             String?
    genres           MediaGenre[]
    episodeCount     Int?
    seasonCount      Int?
    originalCountry  String?
    originalLanguage String?
    originalName     String?
    seasons          Season[]
    status           String?
    poster           String?

    dropped Boolean?

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}

model Movie {
    id               String       @id @default(cuid())
    tmdbId           Int          @unique
    title            String?
    genres           MediaGenre[]
    originalLanguage String?
    originalTitle    String?
    overview         String?
    releaseDate      DateTime?
    poster           String?

    checked Boolean @default(false)

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}

model BookAuthor {
    id    String @id @default(cuid())
    name  String @unique
    books Book[]
}

model BookCategory {
    id    String @id @default(cuid())
    name  String @unique
    books Book[]

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}

model BookSerie {
    id    String @id @default(cuid())
    name  String @unique
    books Book[]

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}

model Book {
    id            String         @id @default(cuid())
    gapiId        String         @unique
    title         String?
    authors       BookAuthor[]
    cover         String?
    categories    BookCategory[]
    description   String?
    publishedDate DateTime?
    serie         BookSerie?     @relation(fields: [bookSerieId], references: [id])
    serie_order   String?

    checked_marin  Boolean @default(false)
    checked_marion Boolean @default(false)

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    bookSerieId String?
}
